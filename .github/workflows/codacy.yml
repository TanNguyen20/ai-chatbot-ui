name: Codacy Security Scan

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  schedule:
    - cron: '23 23 * * 5'

permissions:
  contents: read

jobs:
  codacy-security-scan:
    permissions:
      contents: read
      security-events: write
      actions: read
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run Codacy Analysis CLI
        uses: codacy/codacy-analysis-cli-action@d840f886c4bd4edc059706d09c6a1586111c540b
        with:
          project-token: ${{ secrets.CODACY_PROJECT_TOKEN }}
          verbose: true
          output: results.sarif
          format: sarif
          gh-code-scanning-compat: true
          max-allowed-issues: 2147483647

      # --- NEW: split results.sarif into one-run-per-file and give each a unique category
      - name: Split SARIF into one run per file
        shell: bash
        run: |
          set -euo pipefail
          mkdir -p sarif-split
          runs=$(jq '.runs | length' results.sarif)
          if [ "$runs" -eq 0 ]; then
            echo "No runs in SARIF; nothing to upload."
            exit 0
          fi

          for i in $(seq 0 $((runs-1))); do
            # Extract single run
            jq --argjson i $i '{
              "version": .version,
              "$schema": ."$schema",
              "runs": [ .runs[$i] ]
            }' results.sarif > "sarif-split/run-$i.sarif"

            # Ensure unique category via automationDetails.id
            jq --arg id "codacy-run-$i" '
              .runs[0].automationDetails = (.runs[0].automationDetails // {}) |
              .runs[0].automationDetails.id = $id
            ' "sarif-split/run-$i.sarif" > "sarif-split/run-$i.tmp" \
              && mv "sarif-split/run-$i.tmp" "sarif-split/run-$i.sarif"
          done

          ls -l sarif-split

      - name: Upload SARIF (folder)
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: sarif-split
